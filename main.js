(()=>{"use strict";var __webpack_modules__={711:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "B": () => /* binding */ scaleSwitch,\n  "c": () => /* binding */ temperature\n});\n\n;// CONCATENATED MODULE: ./src/weather.ts\nconst supBro = (name) => {\r\n    console.log(`Hey ${name}, what are you?`);\r\n};\r\n\r\n// import { supBro } from "./weather";\r\n// import { changeScale } from "./scalecheck";\r\n// const input = <HTMLInputElement>document.querySelector(`input[type="text"]`);\r\n// const city = <HTMLHeadingElement>document.querySelector(".name");\r\n// const temperature = <HTMLParagraphElement>(\r\n//   document.querySelector(".temperature")\r\n// );\r\n// const icon = <HTMLParagraphElement>document.querySelector(".icon");\r\n// const description = <HTMLParagraphElement>(\r\n//   document.querySelector(".description")\r\n// );\r\n// const scaleToggleContainer = <HTMLDivElement>(\r\n//   document.querySelector(".scale-container")\r\n// );\r\n// const weatherDisplay = <HTMLDivElement>document.querySelector(".display");\r\n// const scaleSwitch = <HTMLInputElement>(\r\n//   document.querySelector("#temperature-scale")\r\n// );\r\n// const weatherCardsContainer = <HTMLDivElement>(\r\n//   document.querySelector(".weather-cards-container")\r\n// );\r\n// const cardTemplate = <HTMLTemplateElement>(\r\n//   document.querySelector("#card-template")\r\n// );\r\n// let cities = JSON.parse(localStorage.getItem("cities") || "{}");\r\n// console.log(cities);\r\n// class City {\r\n//   city: string;\r\n//   temperature: string;\r\n//   icon: string;\r\n//   description: string;\r\n//   constructor(\r\n//     city: string,\r\n//     temperature: string,\r\n//     icon: string,\r\n//     description: string\r\n//   ) {\r\n//     this.city = city;\r\n//     this.temperature = temperature;\r\n//     this.icon = icon;\r\n//     this.description = description;\r\n//   }\r\n// }\r\n// function save() {\r\n//   localStorage.setItem("cities", JSON.stringify(cities));\r\n// }\r\n// // function renderCities() {\r\n// //   cities.forEach((city) => {\r\n// //     const weatherCard = document.importNode(cardTemplate.content, true);\r\n// //   });\r\n// // }\r\n// async function getWeather() {\r\n//   try {\r\n//     const response = await fetch(\r\n//       `https://api.openweathermap.org/data/2.5/weather?q=${input.value}&appid=1c954fe59dca8548d2eb13416b4f9da3`,\r\n//       { mode: "cors" }\r\n//     );\r\n//     const data = await response.json();\r\n//     const city = createCityCard(data);\r\n//     // const cityValue = data["name"];\r\n//     // const countryValue = data["sys"]["country"];\r\n//     // const temperatureValue = data["main"]["temp"];\r\n//     // const descriptionValue = data["weather"][0]["description"];\r\n//     // city.innerHTML = `${cityValue}, ${countryValue}`;\r\n//     // // convert kelvin to fahrenheit\r\n//     // temperature.innerHTML =\r\n//     //   Math.round(((temperatureValue - 273.15) * 9) / 5 + 32).toString() +\r\n//     //   "&deg";\r\n//     // icon.innerHTML = `<img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/162656/${data.weather[0]["icon"]}.svg" />`;\r\n//     // description.innerHTML = descriptionValue;\r\n//     weatherDisplay.style.display = "block";\r\n//     scaleToggleContainer.style.display = "block";\r\n//     weatherCardsContainer.appendChild(weatherDisplay);\r\n//     cities.push(city);\r\n//     save();\r\n//     console.log(cities);\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// }\r\n// function createCityCard(data: any) {\r\n//   const cityValue = data["name"];\r\n//   const countryValue = data["sys"]["country"];\r\n//   const temperatureValue = data["main"]["temp"];\r\n//   const descriptionValue = data["weather"][0]["description"];\r\n//   city.innerHTML = `${cityValue}, ${countryValue}`;\r\n//   // convert kelvin to fahrenheit\r\n//   temperature.innerHTML =\r\n//     Math.round(((temperatureValue - 273.15) * 9) / 5 + 32).toString() + "&deg";\r\n//   icon.innerHTML = `<img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/162656/${data.weather[0]["icon"]}.svg" />`;\r\n//   description.innerHTML = descriptionValue;\r\n//   const cityCard = new City(\r\n//     city.innerHTML,\r\n//     temperature.innerHTML,\r\n//     icon.innerHTML,\r\n//     description.innerHTML\r\n//   );\r\n//   cities.push(cityCard);\r\n//   save();\r\n// }\r\n// supBro("Josh");\r\n// input.addEventListener("keyup", () => {\r\n//   getWeather();\r\n// });\r\n// scaleSwitch.addEventListener("click", changeScale);\r\n// export { scaleSwitch };\r\n\n;// CONCATENATED MODULE: ./src/scalecheck.ts\n\r\nfunction changeScale() {\r\n    if (scaleSwitch.checked) {\r\n        toggleFahrenheit();\r\n    }\r\n    else {\r\n        toggleCelsius();\r\n    }\r\n}\r\nfunction toggleFahrenheit() {\r\n    temperature.map((temp) => {\r\n        temp.innerHTML =\r\n            Math.round((5 / 9) * (parseInt(temp.innerHTML) - 32)).toString() + "&deg";\r\n    });\r\n}\r\nfunction toggleCelsius() {\r\n    temperature.map((temp) => {\r\n        temp.innerHTML =\r\n            Math.round((9 / 5) * parseInt(temp.innerHTML) + 32).toString() + "&deg";\r\n    });\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/index.ts\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nconst src_form = document.querySelector("form");\r\nconst input = document.querySelector(`input[type="text"]`);\r\nconst submitButton = (document.querySelector(`input[type="submit"]`));\r\nconst scaleToggleContainer = (document.querySelector(".scale-container"));\r\nconst weatherDisplay = document.querySelector(".display");\r\nconst scaleSwitch = (document.querySelector("#temperature-scale"));\r\nconst weatherCardsContainer = (document.querySelector(".weather-cards-container"));\r\nlet cities = JSON.parse(localStorage.getItem("cities") || "[]");\r\ndisplayCards();\r\nclass City {\r\n    constructor(city, temperature, icon, description) {\r\n        this.city = city;\r\n        this.temperature = temperature;\r\n        this.icon = icon;\r\n        this.description = description;\r\n    }\r\n}\r\nfunction save() {\r\n    localStorage.setItem("cities", JSON.stringify(cities));\r\n}\r\nfunction getWeather() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const response = yield fetch(`https://api.openweathermap.org/data/2.5/weather?q=${input.value}&appid=1c954fe59dca8548d2eb13416b4f9da3`, { mode: "cors" });\r\n            const data = yield response.json();\r\n            createCityCard(data);\r\n            // weatherDisplay.style.display = "block";\r\n            scaleToggleContainer.style.display = "block";\r\n            console.log(data);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    });\r\n}\r\nfunction createCityCard(data) {\r\n    const cityAndCountry = `${data["name"]}, ${data["sys"]["country"]}`;\r\n    const realTemperature = Math.round(((data["main"]["temp"] - 273.15) * 9) / 5 + 32).toString() +\r\n        "&deg";\r\n    const icon = `<img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/162656/${data.weather[0]["icon"]}.svg"`;\r\n    const description = data["weather"][0]["description"];\r\n    const cityCard = new City(cityAndCountry, realTemperature, icon, description);\r\n    cities.push(cityCard);\r\n    displayCards();\r\n    // save();\r\n}\r\nfunction displayCards() {\r\n    weatherCardsContainer.innerHTML = cities\r\n        .map((city) => {\r\n        return `<div class="display">\r\n      <h2 class="name">${city.city}</h2>\r\n      <div class="span-one-line"><p class="temperature">${city.temperature}</p>\r\n      <p class="icon">${city.icon}</p></div>\r\n      <p class="description">${city.description}</p>\r\n    </div>`;\r\n    })\r\n        .join("");\r\n}\r\nsupBro("Josh");\r\nsrc_form.addEventListener("submit", (e) => {\r\n    e.preventDefault();\r\n    getWeather();\r\n    src_form.reset();\r\n});\r\nscaleSwitch.addEventListener("click", changeScale);\r\nconst temperature = [...Array.from(document.querySelectorAll(".temperature"))];\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///711\n')}},__webpack_module_cache__={};function __webpack_require__(c){if(__webpack_module_cache__[c])return __webpack_module_cache__[c].exports;var Q=__webpack_module_cache__[c]={exports:{}};return __webpack_modules__[c](Q,Q.exports,__webpack_require__),Q.exports}__webpack_require__.d=(c,Q)=>{for(var F in Q)__webpack_require__.o(Q,F)&&!__webpack_require__.o(c,F)&&Object.defineProperty(c,F,{enumerable:!0,get:Q[F]})},__webpack_require__.o=(c,Q)=>Object.prototype.hasOwnProperty.call(c,Q),__webpack_require__(711)})();